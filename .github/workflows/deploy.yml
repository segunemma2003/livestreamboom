name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main
      - develop
      - staging

jobs:
  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Zip Dockerrun.aws.json
        run: zip deploy.zip Dockerrun.aws.json

      - name: Ensure S3 bucket exists and upload zip
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          if ! aws s3api head-bucket --bucket "$S3_BUCKET" 2>/dev/null; then
            aws s3api create-bucket --bucket "$S3_BUCKET" --region "$AWS_REGION" --create-bucket-configuration LocationConstraint="$AWS_REGION"
          fi
          aws s3 cp deploy.zip s3://$S3_BUCKET/deploy.zip

      - name: Deploy to Elastic Beanstalk
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          APP_NAME: ${{ secrets.BEANSTALK_APP_NAME }}
          ENV_NAME: ${{ secrets.BEANSTALK_ENV_NAME }}
        run: |
          VERSION_LABEL="prod-${GITHUB_SHA::7}"
          aws elasticbeanstalk create-application-version \
            --application-name $APP_NAME \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=deploy.zip
          aws elasticbeanstalk update-environment \
            --environment-name $ENV_NAME \
            --version-label $VERSION_LABEL

  deploy-staging:
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: staging
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Zip Dockerrun.aws.json
        run: zip deploy.zip Dockerrun.aws.json

      - name: Ensure S3 bucket exists and upload zip
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET_STAGING }}
        run: |
          if ! aws s3api head-bucket --bucket "$S3_BUCKET" 2>/dev/null; then
            aws s3api create-bucket --bucket "$S3_BUCKET" --region "$AWS_REGION" --create-bucket-configuration LocationConstraint="$AWS_REGION"
          fi
          aws s3 cp deploy.zip s3://$S3_BUCKET/deploy.zip

      - name: Deploy to Elastic Beanstalk
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET_STAGING }}
          APP_NAME: ${{ secrets.BEANSTALK_APP_NAME_STAGING }}
          ENV_NAME: ${{ secrets.BEANSTALK_ENV_NAME_STAGING }}
        run: |
          VERSION_LABEL="staging-${GITHUB_SHA::7}"
          aws elasticbeanstalk create-application-version \
            --application-name $APP_NAME \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=deploy.zip
          aws elasticbeanstalk update-environment \
            --environment-name $ENV_NAME \
            --version-label $VERSION_LABEL
